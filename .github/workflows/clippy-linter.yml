name: Clippy Lint # The name of the workflow, displayed in the GitHub Actions UI.

on:
  pull_request: # This workflow is triggered on pull requests.
    branches:
      - "*" # It runs for all branches.

jobs:
  clippy: # The job name.
    name: Run Clippy # A descriptive name for the job.
    runs-on: ubuntu-latest # The job will run on the latest Ubuntu environment.

    steps:
      - name: Checkout code # Step to check out the repository code.
        uses: actions/checkout@v3 # Uses the GitHub-provided action to clone the repository.

      - name: Install Rust # Step to install the Rust toolchain.
        uses: actions-rs/toolchain@v1 # Uses the actions-rs/toolchain action.
        with:
          toolchain: stable # Specifies the Rust toolchain version to install (stable in this case)

      - name: Add clippy
        run: rustup component add clippy # Ensures the Clippy component is installed.

      - name: Run Clippy
          # Flags explained:
          # Cargo flags:
          # --all-targets: Check all targets (including tests, benches, examples).
          # 
          # --all-features: Build with all available features.
          # 
          # Clippy flags (after --):
          # -D warnings: Turn all compiler and Clippy warnings into errors.
          # 
          # -A clippy::style: Allow Clippy lints in the style category (i.e., don't warn or error).
          # 
          # -D clippy::perf: Treat performance-related lints as errors.
        run: cargo clippy --all-targets --all-features -- -Aclippy::style -Dclippy::perf